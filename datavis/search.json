[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bio",
    "section": "",
    "text": "Welcome! I am Giuseppe Peressotti, 1st year PhD student in Public Policy and Political Economy from The University of Texas at Dallas(EPPS).\nMy main field of study would be International Trade, with a focus on Preferential Trade Agreements. Some of my specific research topics include Digital Provisions in PTAs, the relationship between foreign policy and trade interconnection between states, and the influence of trade ties on the preferential procurement of goods.\nKeep following me for more updates on further work and publications (soon to come).\nYou can find my CV here (WORK IN PROGRESS)."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "## Anscombe (1973) Quartlet\n\ndata(anscombe)  # Load Anscombe's data\nView(anscombe) # View the data\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n## Simple version\nplot(anscombe$x1,anscombe$y1)\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n# Create four model objects\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\n\n\n\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\n\n\n\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\n\n\n\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n\n\n\n## Fancy version (per help file)\n\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n  print(anova(lmi))\n}\n\nAnalysis of Variance Table\n\nResponse: y1\n          Df Sum Sq Mean Sq F value  Pr(&gt;F)   \nx1         1 27.510 27.5100   17.99 0.00217 **\nResiduals  9 13.763  1.5292                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y2\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx2         1 27.500 27.5000  17.966 0.002179 **\nResiduals  9 13.776  1.5307                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y3\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx3         1 27.470 27.4700  17.972 0.002176 **\nResiduals  9 13.756  1.5285                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y4\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx4         1 27.490 27.4900  18.003 0.002165 **\nResiduals  9 13.742  1.5269                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsapply(mods, coef)  # Note the use of this function\n\n                  lm1      lm2       lm3       lm4\n(Intercept) 3.0000909 3.000909 3.0024545 3.0017273\nx1          0.5000909 0.500000 0.4997273 0.4999091\n\nlapply(mods, function(fm) coef(summary(fm)))\n\n$lm1\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0000909  1.1247468 2.667348 0.025734051\nx1          0.5000909  0.1179055 4.241455 0.002169629\n\n$lm2\n            Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.000909  1.1253024 2.666758 0.025758941\nx2          0.500000  0.1179637 4.238590 0.002178816\n\n$lm3\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0024545  1.1244812 2.670080 0.025619109\nx3          0.4997273  0.1178777 4.239372 0.002176305\n\n$lm4\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0017273  1.1239211 2.670763 0.025590425\nx4          0.4999091  0.1178189 4.243028 0.002164602\n\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"blue\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\npar(op)"
  },
  {
    "objectID": "assignment1.html#the-topic",
    "href": "assignment1.html#the-topic",
    "title": "Assignment 1",
    "section": "",
    "text": "The main objective of this research would be to gauge how well can the gravity model (and economic factors in general) predict the implementation of digital provisions in Preferential Trade Agreements.\nThe project will be built on top of a personal ongoing research, aiming to expand it with a more advanced set of tools: I am planning to use TERGM (Network Analysis) to compare Actual Networks of PTAs to Networks predicted on purely economic factors. I will evaluate structural characteristics (centrality levels, balance…) and make inferences based on that.\nI hypothesize that different countries will play different fundamental roles in the network, and that the gravity model is limited in predicting how the actual network of PTAs developed."
  },
  {
    "objectID": "assignment1.html#original-abstract-without-tergm",
    "href": "assignment1.html#original-abstract-without-tergm",
    "title": "Assignment 1",
    "section": "Original Abstract (without TERGM)",
    "text": "Original Abstract (without TERGM)\nEntering the current ‘digital era’, as the WTO failed to keep pace with trends in international trade, countries started to take the matter into their own hands and include in their Preferential Trade Agreements (PTAs) subjects such as e-commerce, the exchange of data, user privacy, Artificial Intelligence (AI), and intellectual property. This new information technology-driven set of policies may lay the foundations to forge new linkages between countries, and possibly define current and future geopolitical networks. However, little is known about how parties actually implement these ‘digital provisions’, as well as what defines which kind of clauses are prioritized by specific parties. This article explores to what extent economic factors and the gravity model can justify the implementation of digital-based provisions in PTAs. It will further make use of network analysis to gauge how well can an economic factors-model predict the centrality of PTA networks based on different kinds of digital clauses, vis-à-vis the actual existing one. Evidence will show how, while such economic factors seem to be relevant in determining how these provisions are implemented, non-economic elements might matter even more. This idea seems to be supported by differences in how distinct levels of centrality are estimated, as well as those pertaining different kinds of digital clauses: networks predicted on the basis of economic factors appear to be heterogeneously different compared to their actual counterparts, meaning that some non-economic elements may play an important role in shaping those PTA networks.\nKeywords: PTA, international trade, digital trade, network analysis, regionalism, gravity model\nSubfield 1: International Political Economy\nSubfield 2: Public Policy"
  },
  {
    "objectID": "research.html",
    "href": "research.html",
    "title": "Research",
    "section": "",
    "text": "Digital Provision Clustering in Trade Policy: Are Economic Factors Drivers of Digital Regionalism?\nDelving into the Concept of Trade Diplomacy: A Dual Comparative Case Study on the US and China\nVaccine Diplomacy: The Role of US Bilateral Relations in COVID Vaccine Procurements (joint paper)"
  },
  {
    "objectID": "research.html#work-in-progress",
    "href": "research.html#work-in-progress",
    "title": "Research",
    "section": "",
    "text": "Digital Provision Clustering in Trade Policy: Are Economic Factors Drivers of Digital Regionalism?\nDelving into the Concept of Trade Diplomacy: A Dual Comparative Case Study on the US and China\nVaccine Diplomacy: The Role of US Bilateral Relations in COVID Vaccine Procurements (joint paper)"
  },
  {
    "objectID": "assignment1.html#anscombe-1973",
    "href": "assignment1.html#anscombe-1973",
    "title": "Assignment 1",
    "section": "",
    "text": "## Anscombe (1973) Quartlet\n\ndata(anscombe)  # Load Anscombe's data\nView(anscombe) # View the data\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n## Simple version\nplot(anscombe$x1,anscombe$y1)\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n# Create four model objects\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\n\n\n\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\n\n\n\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\n\n\n\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n\n\n\n## Fancy version (per help file)\n\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n  print(anova(lmi))\n}\n\nAnalysis of Variance Table\n\nResponse: y1\n          Df Sum Sq Mean Sq F value  Pr(&gt;F)   \nx1         1 27.510 27.5100   17.99 0.00217 **\nResiduals  9 13.763  1.5292                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y2\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx2         1 27.500 27.5000  17.966 0.002179 **\nResiduals  9 13.776  1.5307                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y3\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx3         1 27.470 27.4700  17.972 0.002176 **\nResiduals  9 13.756  1.5285                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y4\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx4         1 27.490 27.4900  18.003 0.002165 **\nResiduals  9 13.742  1.5269                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsapply(mods, coef)  # Note the use of this function\n\n                  lm1      lm2       lm3       lm4\n(Intercept) 3.0000909 3.000909 3.0024545 3.0017273\nx1          0.5000909 0.500000 0.4997273 0.4999091\n\nlapply(mods, function(fm) coef(summary(fm)))\n\n$lm1\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0000909  1.1247468 2.667348 0.025734051\nx1          0.5000909  0.1179055 4.241455 0.002169629\n\n$lm2\n            Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.000909  1.1253024 2.666758 0.025758941\nx2          0.500000  0.1179637 4.238590 0.002178816\n\n$lm3\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0024545  1.1244812 2.670080 0.025619109\nx3          0.4997273  0.1178777 4.239372 0.002176305\n\n$lm4\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0017273  1.1239211 2.670763 0.025590425\nx4          0.4999091  0.1178189 4.243028 0.002164602\n\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"blue\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\npar(op)"
  },
  {
    "objectID": "assignment1.html#generative-art",
    "href": "assignment1.html#generative-art",
    "title": "Assignment 1",
    "section": "Generative Art",
    "text": "Generative Art\nFrom: https://aiartists.org/generative-art-design\n\n\n\nPlatonic Solids, by Michael Hansmeyer.\n\n\n\n\n\nA bike created with Generative Design that reduces the number of parts, and creates a lighter and stronger body."
  },
  {
    "objectID": "assignment1.html#fall.r",
    "href": "assignment1.html#fall.r",
    "title": "Assignment 1",
    "section": "Fall.R",
    "text": "Fall.R\n\n\n\nResult of running Fall.R"
  },
  {
    "objectID": "assignment1.html#critique-charts-on-brisc-related-papers",
    "href": "assignment1.html#critique-charts-on-brisc-related-papers",
    "title": "Assignment 1",
    "section": "Critique: charts on BRISC related papers",
    "text": "Critique: charts on BRISC related papers\n\n\n\nFrom: Lohani, 2020\n\n\n\n\n\nFrom: Arapova, 2019"
  },
  {
    "objectID": "assignment1.html#critique-charts-on-brics-related-papers",
    "href": "assignment1.html#critique-charts-on-brics-related-papers",
    "title": "Assignment 1",
    "section": "Critique: charts on BRICS-related papers",
    "text": "Critique: charts on BRICS-related papers\n\n\n\nFrom: Lohani, 2020\n\n\n\n\n\nFrom: Arapova, 2019\n\n\nThese two charts appear in paper that deal with the BRICS, and they analyze socio-economic characteristics of countries and/or economic regional blocs. The first chart represents Indian exports (no further details on the pic, presumably it refers to percentage) towards other BRICS members. The second chart represent the percentage of total trade of the bloc with all the other four blocs.\nBoth the charts appear to be overcrowded with information, with columns that are difficult to differentiate while being placed one next to the other. The authors do not use colors, making said columns even harder to differentiate. In the first chart trends that are not related to China are difficult to visualize, and the numbers referring to the percentage of exports are put on top of each other (and each column) further making the graph difficult to read. The second chart, while not filled with numbers for each columns, pointlessly adds a 3d feature to its histograms and, even in this case, it would be hard to identify the precise year to which each column refers."
  },
  {
    "objectID": "assignment2.html",
    "href": "assignment2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "### Paul Murrell's R examples (selected)\n\n## Start plotting from basics \n# Note the order\nplot(pressure, pch=16)  # Can you change pch?\ntext(150, 600, \n     \"Pressure (mm Hg)\\nversus\\nTemperature (Celsius)\")\nPch = change in size of datapoints/dots.\n#  Examples of standard high-level plots \n#  In each case, extra output is also added using low-level\n#  plotting functions.\n# \n\n# Setting the parameter (3 rows by 2 cols)\npar(mfrow=c(3, 2))\n\n# Scatterplot\n# Note the incremental additions\n\nx &lt;- c(0.5, 2, 4, 8, 12, 16)\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)\ny2 &lt;- c(4, .8, .5, .45, .4, .3)\n\n# Setting label orientation, margins c(bottom, left, top, right) & text size\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \nplot.new()\nplot.window(range(x), c(0, 6))\nlines(x, y1)\nlines(x, y2)\npoints(x, y1, pch=16, cex=2) # Try different cex value?  \n\npoints(x, y2, pch=21, bg=\"white\", cex=2)  # Different background color\npar(col=\"gray50\", fg=\"gray50\", col.axis=\"gray50\")\naxis(1, at=seq(0, 16, 4)) # What is the first number standing for?\naxis(2, at=seq(0, 6, 2))\naxis(4, at=seq(0, 6, 2))\nbox(bty=\"u\")\nmtext(\"Travel Time (s)\", side=1, line=2, cex=0.8)\nmtext(\"Responses per Travel\", side=2, line=2, las=0, cex=0.8)\nmtext(\"Responses per Second\", side=4, line=2, las=0, cex=0.8)\ntext(4, 5, \"Bird 131\")\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\")\nCex values yield different size points.\nThe first number defines the axis line that is being added.\n# Histogram\n# Random data\nY &lt;- rnorm(50)\n# Make sure no Y exceed [-3.5, 3.5]\nY[Y &lt; -3.5 | Y &gt; 3.5] &lt;- NA # Selection/set range\nx &lt;- seq(-3.5, 3.5, .1)\ndn &lt;- dnorm(x)\npar(mar=c(4.5, 4.1, 3.1, 0))\nhist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), \n     col=\"gray80\", freq=FALSE)\nlines(x, dnorm(x), lwd=2)\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n# Barplot\npar(mar=c(2, 3.1, 2, 2.1)) \nmidpts &lt;- barplot(VADeaths, \n                  col=gray(0.1 + seq(1, 9, 2)/11), \n                                    names=rep(\"\", 4))\nmtext(sub(\" \", \"\\n\", colnames(VADeaths)),\n      at=midpts, side=1, line=0.5, cex=0.5)\ntext(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2,\n     VADeaths, \n     col=rep(c(\"white\", \"black\"), times=3:2), \n     cex=0.8)\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n# Boxplot\npar(mar=c(3, 4.1, 2, 0))\nboxplot(len ~ dose, data = ToothGrowth,\n        boxwex = 0.25, at = 1:3 - 0.2,\n        subset= supp == \"VC\", col=\"white\",\n        xlab=\"\",\n        ylab=\"tooth length\", ylim=c(0,35))\nmtext(\"Vitamin C dose (mg)\", side=1, line=2.5, cex=0.8)\nboxplot(len ~ dose, data = ToothGrowth, add = TRUE,\n        boxwex = 0.25, at = 1:3 + 0.2,\n        \n        subset= supp == \"OJ\")\nlegend(1.5, 9, c(\"Ascorbic acid\", \"Orange juice\"), \n       fill = c(\"white\", \"gray\"), \n       bty=\"n\")\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n# Persp\nx &lt;- seq(-10, 10, length= 30)\ny &lt;- x\nf &lt;- function(x,y) { r &lt;- sqrt(x^2+y^2); 10 * sin(r)/r }\nz &lt;- outer(x, y, f)\nz[is.na(z)] &lt;- 1\n# 0.5 to include z axis label\npar(mar=c(0, 0.5, 0, 0), lwd=0.5)\npersp(x, y, z, theta = 30, phi = 30, \n      expand = 0.5)\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)\n\n# Piechart\npar(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)\npie.sales &lt;- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)\nnames(pie.sales) &lt;- c(\"Blueberry\", \"Cherry\",\n                      \"Apple\", \"Boston Cream\", \"Other\", \"Vanilla\")\npie(pie.sales, col = gray(seq(0.3,1.0,length=6)))\n# Exercise: Can you generate these charts individually?  Try these functions \n# using another dataset. Be sure to work on the layout and margins\n#load package\nlibrary(readxl)\n#load data\ndata &lt;- read_excel(\"happy.xlsx\")\n\nNew names:\n• `` -&gt; `...4`"
  },
  {
    "objectID": "assignment2.html#how-to-create-a-bad-graph",
    "href": "assignment2.html#how-to-create-a-bad-graph",
    "title": "Assignment 2",
    "section": "How to create a bad graph",
    "text": "How to create a bad graph\n\n#Plot the data and add the axis to make sure they are included\nplot(data$HPI, type = \"n\", xlim = c(0, nrow(data) + 1), ylim = c(0, max(data$HPI) * 1.1),\n     xlab = \"Country\", ylab = \"HPI\", main = \"HPI by Country\")\naxis(1, at = 1:nrow(data), labels = FALSE)\naxis(2, at = seq(0, max(data$HPI) * 1.1, by = 10))\n\n# Add the scatterplot points\npoints(1:nrow(data), data$HPI, pch = 19, col = \"blue\")\n\n# Add country names as text labels on the X-axis\ntext(1:nrow(data), -0.2, labels = data$Country, srt = 45, adj = c(1, 0.5), xpd = TRUE)\n# Add a legend\nlegend(\"topright\", legend = \"HPI\", col = \"blue\", pch = 19)"
  },
  {
    "objectID": "assignment2.html#a-slightly-less-bad-graph",
    "href": "assignment2.html#a-slightly-less-bad-graph",
    "title": "Assignment 2",
    "section": "A slightly less bad graph",
    "text": "A slightly less bad graph\n\n# Create histogram \nhist_breaks &lt;- seq(24, 63, by = 5) \n\n# Divide intervals for HPI and count them\nhist_intervals &lt;- cut(data$HPI, breaks = hist_breaks, right = FALSE)\n\n\nhist_counts &lt;- table(hist_intervals)\n\n# modify x axis with names\nx_axis_labels &lt;- paste(head(hist_breaks, -1), tail(hist_breaks, -1), sep = \"-\")\n\n#plot histogram\nbarplot(hist_counts, names.arg = x_axis_labels, \n        xlab = \"HPI Intervals\", ylab = \"Number of Countries\", \n        col = \"blue\", main = \"Histogram of HPI Scores\")"
  },
  {
    "objectID": "assignment3.html",
    "href": "assignment3.html",
    "title": "Assignment 3",
    "section": "",
    "text": "## Anscombe (1973) Quartlet\n\ndata(anscombe)  # Load Anscombe's data\nView(anscombe) # View the data\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n## Simple version\nplot(anscombe$x1,anscombe$y1)\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n# Create four model objects\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\n\n\n\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\n\n\n\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\n\n\n\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n\n\n\n## Fancy version (per help file)\n\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n  print(anova(lmi))\n}\n\nAnalysis of Variance Table\n\nResponse: y1\n          Df Sum Sq Mean Sq F value  Pr(&gt;F)   \nx1         1 27.510 27.5100   17.99 0.00217 **\nResiduals  9 13.763  1.5292                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y2\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx2         1 27.500 27.5000  17.966 0.002179 **\nResiduals  9 13.776  1.5307                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y3\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx3         1 27.470 27.4700  17.972 0.002176 **\nResiduals  9 13.756  1.5285                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y4\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx4         1 27.490 27.4900  18.003 0.002165 **\nResiduals  9 13.742  1.5269                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsapply(mods, coef)  # Note the use of this function\n\n                  lm1      lm2       lm3       lm4\n(Intercept) 3.0000909 3.000909 3.0024545 3.0017273\nx1          0.5000909 0.500000 0.4997273 0.4999091\n\nlapply(mods, function(fm) coef(summary(fm)))\n\n$lm1\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0000909  1.1247468 2.667348 0.025734051\nx1          0.5000909  0.1179055 4.241455 0.002169629\n\n$lm2\n            Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.000909  1.1253024 2.666758 0.025758941\nx2          0.500000  0.1179637 4.238590 0.002178816\n\n$lm3\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0024545  1.1244812 2.670080 0.025619109\nx3          0.4997273  0.1178777 4.239372 0.002176305\n\n$lm4\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0017273  1.1239211 2.670763 0.025590425\nx4          0.4999091  0.1178189 4.243028 0.002164602\n\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"purple\", pch = 21, bg = \"purple\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"red\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\npar(op)"
  },
  {
    "objectID": "assignment3.html#part-1",
    "href": "assignment3.html#part-1",
    "title": "Assignment 3",
    "section": "",
    "text": "## Anscombe (1973) Quartlet\n\ndata(anscombe)  # Load Anscombe's data\nView(anscombe) # View the data\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n## Simple version\nplot(anscombe$x1,anscombe$y1)\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n# Create four model objects\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\n\n\n\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\n\n\n\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\n\n\n\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n\n\n\n## Fancy version (per help file)\n\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n  print(anova(lmi))\n}\n\nAnalysis of Variance Table\n\nResponse: y1\n          Df Sum Sq Mean Sq F value  Pr(&gt;F)   \nx1         1 27.510 27.5100   17.99 0.00217 **\nResiduals  9 13.763  1.5292                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y2\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx2         1 27.500 27.5000  17.966 0.002179 **\nResiduals  9 13.776  1.5307                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y3\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx3         1 27.470 27.4700  17.972 0.002176 **\nResiduals  9 13.756  1.5285                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y4\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx4         1 27.490 27.4900  18.003 0.002165 **\nResiduals  9 13.742  1.5269                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsapply(mods, coef)  # Note the use of this function\n\n                  lm1      lm2       lm3       lm4\n(Intercept) 3.0000909 3.000909 3.0024545 3.0017273\nx1          0.5000909 0.500000 0.4997273 0.4999091\n\nlapply(mods, function(fm) coef(summary(fm)))\n\n$lm1\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0000909  1.1247468 2.667348 0.025734051\nx1          0.5000909  0.1179055 4.241455 0.002169629\n\n$lm2\n            Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.000909  1.1253024 2.666758 0.025758941\nx2          0.500000  0.1179637 4.238590 0.002178816\n\n$lm3\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0024545  1.1244812 2.670080 0.025619109\nx3          0.4997273  0.1178777 4.239372 0.002176305\n\n$lm4\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0017273  1.1239211 2.670763 0.025590425\nx4          0.4999091  0.1178189 4.243028 0.002164602\n\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"purple\", pch = 21, bg = \"purple\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"red\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\npar(op)"
  },
  {
    "objectID": "assignment3.html#part-2",
    "href": "assignment3.html#part-2",
    "title": "Assignment 3",
    "section": "Part 2",
    "text": "Part 2\n\n#I changed colors (not default), changed the font and changed the character\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0), family = \"serif\")\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"#c427d4\", pch = 17, bg = \"#c427d4\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"#d44527\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\npar(op)"
  },
  {
    "objectID": "assignment3.html#part-3",
    "href": "assignment3.html#part-3",
    "title": "Assignment 3",
    "section": "Part 3",
    "text": "Part 3\n\n# Load the ggplot2 package\nlibrary(ggplot2)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ lubridate 1.9.2     ✔ tibble    3.2.1\n✔ purrr     1.0.1     ✔ tidyr     1.3.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(hrbrthemes)\n\nNOTE: Either Arial Narrow or Roboto Condensed fonts are required to use these themes.\n      Please use hrbrthemes::import_roboto_condensed() to install Roboto Condensed and\n      if Arial Narrow is not on your system, please see https://bit.ly/arialnarrow\n\nggplot(data = anscombe, aes(x=x1, y=y1 )) + \n    geom_point(size=3, color=\"#c427d4\", shape=17) +\n    geom_smooth(method=lm , color=\"red\", se=FALSE) +\n    theme_ipsum() \n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\nggplot(data = anscombe, aes(x=x2, y=y2 )) + \n    geom_point(size=3, color=\"#c427d4\", shape=17) +\n    geom_smooth(method=lm , color=\"red\", se=FALSE) +\n    theme_ipsum() \n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\nggplot(data = anscombe, aes(x=x3, y=y3 )) + \n    geom_point(size=3, color=\"#c427d4\", shape=17) +\n    geom_smooth(method=lm , color=\"red\", se=FALSE) +\n    theme_ipsum() \n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\nggplot(data = anscombe, aes(x=x4, y=y4 )) + \n    geom_point(size=3, color=\"#c427d4\", shape=17) +\n    geom_smooth(method=lm , color=\"red\", se=FALSE) +\n    theme_ipsum() \n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database"
  },
  {
    "objectID": "assignment3.html#part-4",
    "href": "assignment3.html#part-4",
    "title": "Assignment 3",
    "section": "Part 4",
    "text": "Part 4\n\n## Download COVID data from OWID GitHub\nowidall = read.csv(\"https://github.com/owid/covid-19-data/blob/master/public/data/owid-covid-data.csv?raw=true\")\n# Deselect cases/rows with OWID\nowidall1 = owidall[!grepl(\"^OWID\", owidall$iso_code), ]\n# Subset by continent: Europe\nowideu = subset(owidall1, continent==\"Europe\")\n#change the class to date -&gt; useful to filter later\nowideu$date &lt;- as.Date(owideu$date)\n\n\nlibrary(dplyr)\n\n# dates so I can have thresholds to put labels on\nspecific_dates &lt;- c(\"2020-12-20\", \"2020-04-05\", \"2020-03-29\", \"2021-11-14\", \"2023-01-01\", \"2023-08-31\")\n\n# make a df filtering the specific dates\nlabel_data &lt;- owideu %&gt;%\n  filter(date %in% specific_dates) %&gt;%\n  group_by(date) %&gt;%\n  arrange(desc(new_deaths)) %&gt;%\n  slice(1) %&gt;%\n  ungroup()\n\n# plot the data changing all the settings\nggplot(data = owideu, aes(x = date, y = new_deaths)) +\n  geom_point(size = 1, color = \"#f00276\") +\n  geom_text(data = label_data, aes(label = location), vjust = -0.5, family=\"serif\") +  \n  theme(\n    text = element_text(family = \"serif\", size = 12),\n    axis.text.x = element_text(angle = 90, hjust = 1, family = \"serif\"),\n    axis.text.y = element_text(angle = 90, hjust = 1, family = \"serif\"),\n    panel.background = element_rect(fill = \"white\")\n  ) +\n  ylab(\"COVID Deaths in Europe (Daily)\") +\n  xlab(\"Date\") +\n  scale_x_date(\n    date_breaks = \"2 months\",\n    date_labels = \"%Y %m\",\n    minor_breaks = \"1 month\"\n  )\n\nWarning: Removed 56 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "assignment4.html",
    "href": "assignment4.html",
    "title": "Assignment 4: hackaton",
    "section": "",
    "text": "library(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\n\n\n# Example data frame\ndf &lt;- data.frame(\n  Category = c(\"Exports to USA\", \"Exports to China\"),\n  Variable1 = c(26, 56),\n  Variable2 = c(4, 47)\n)\n\n\n# Reshape the data into long format\ndf_long &lt;- df %&gt;%\n  pivot_longer(cols = starts_with(\"Variable\"), names_to = \"Variable\")\n\n# Create a new column for grouping\ndf_long &lt;- df_long %&gt;%\n  mutate(Group = ifelse(grepl(\"1|3\", Variable), \"Group1\", \"Group2\"))\n\n# Create a variable width column chart with specific groupings\nggplot(df_long, aes(x = Category, y = value, fill = Variable)) +\n  geom_col(data = filter(df_long, Group == \"Group1\"), position = position_dodge(width = 1), width = 0.5) +\n  geom_col(data = filter(df_long, Group == \"Group2\"), position = position_dodge(width = 0.5), width = 0.2) +\n  scale_fill_manual(values = c(\"Variable1\" = \"antiquewhite3\", \"Variable2\" = \"darkseagreen\"),\n                    labels = c(\"Variable1\" = \"2010\", \"Variable2\" = \"2002\")) +\n  labs(title = \"Brazil Exports before & after BRICS\",\n       x = \"Export Country\",\n       y = \"Exports Total $ (Thousands)\",\n       fill = \"Export Year\") +\n  theme_minimal() +\n  geom_text(aes(label = value), vjust = -0.5)"
  },
  {
    "objectID": "assignment4.html#part-1",
    "href": "assignment4.html#part-1",
    "title": "Assignment 4: hackaton",
    "section": "",
    "text": "library(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\n\n\n# Example data frame\ndf &lt;- data.frame(\n  Category = c(\"Exports to USA\", \"Exports to China\"),\n  Variable1 = c(26, 56),\n  Variable2 = c(4, 47)\n)\n\n\n# Reshape the data into long format\ndf_long &lt;- df %&gt;%\n  pivot_longer(cols = starts_with(\"Variable\"), names_to = \"Variable\")\n\n# Create a new column for grouping\ndf_long &lt;- df_long %&gt;%\n  mutate(Group = ifelse(grepl(\"1|3\", Variable), \"Group1\", \"Group2\"))\n\n# Create a variable width column chart with specific groupings\nggplot(df_long, aes(x = Category, y = value, fill = Variable)) +\n  geom_col(data = filter(df_long, Group == \"Group1\"), position = position_dodge(width = 1), width = 0.5) +\n  geom_col(data = filter(df_long, Group == \"Group2\"), position = position_dodge(width = 0.5), width = 0.2) +\n  scale_fill_manual(values = c(\"Variable1\" = \"antiquewhite3\", \"Variable2\" = \"darkseagreen\"),\n                    labels = c(\"Variable1\" = \"2010\", \"Variable2\" = \"2002\")) +\n  labs(title = \"Brazil Exports before & after BRICS\",\n       x = \"Export Country\",\n       y = \"Exports Total $ (Thousands)\",\n       fill = \"Export Year\") +\n  theme_minimal() +\n  geom_text(aes(label = value), vjust = -0.5)"
  },
  {
    "objectID": "assignment4.html#part-2",
    "href": "assignment4.html#part-2",
    "title": "Assignment 4: hackaton",
    "section": "Part 2",
    "text": "Part 2\n\nlibrary(ggplot2)\nlibrary(gridExtra)\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\ndata &lt;- read.csv(\"data.csv\")\n\n\n# I make a list of plots (no content yet)\nlista &lt;- list()\n\n# Since I want to give unique colors I create a list based on different countries\nlista2 &lt;- unique(data$Country)\n\n# I make a  custom color palette based on my country names and match it\ncolors &lt;- scales::hue_pal()(length(lista2))\ncountry_colors &lt;- setNames(colors, lista2)\n\n# I make a for loop to create 4 charts\nfor (year in c(2012, 2015, 2018, 2021)) {\n  # I filter through the data for the current year\n  year_data &lt;- data[data$Year == year, ]\n  \n  # Create a plot for the current year\n  plot &lt;- ggplot(year_data, aes(x = Country, y = Trade.Percent, fill = Country)) +\n    geom_bar(stat = \"identity\") +\n    ggtitle(paste(\"Year:\", year)) +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n    scale_fill_manual(values = country_colors) +  # Use the custom color palette\n    guides(fill = FALSE)  # I remove the legend since it's bothersome\n  \n  # Add the plot to the list\n  lista[[as.character(year)]] &lt;- plot\n}\n\nWarning: The `&lt;scale&gt;` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n\n# Combine the plots into a table\ngrid.arrange(grobs = lista, ncol = 2)"
  },
  {
    "objectID": "assignment4.html#part-3",
    "href": "assignment4.html#part-3",
    "title": "Assignment 4: hackaton",
    "section": "Part 3",
    "text": "Part 3\n\nlibrary(ggplot2)\nlibrary(gridExtra)\n\n# Load the USArrests dataset\ndata(USArrests)\n\n# Arrange the data frame by the \"Murder\" variable in ascending order\nUSArrests_sorted_murder &lt;- USArrests[order(USArrests$Murder), ]\n\n# Create the flipped bar chart for \"Murder\" by states\nplot_murder &lt;- ggplot(USArrests_sorted_murder, aes(x = Murder, y = reorder(rownames(USArrests_sorted_murder), Murder))) +\n  geom_bar(stat = \"identity\", fill = \"red\") +\n  labs(x = \"Murder arrests\", y = \"State\") +\n  theme_minimal() +\n  theme(axis.text.y = element_text(hjust = 1))\n\n# Reuse the same ordering for the \"Assault\" chart\nplot_assault &lt;- ggplot(USArrests_sorted_murder, aes(x = Assault, y = reorder(rownames(USArrests_sorted_murder), Murder))) +\n  geom_bar(stat = \"identity\", fill = \"orange\") +\n  labs(x = \"Assault arrests\", y = \"\") +\n  theme_minimal() +\n  theme(axis.text.y = element_blank())  # Remove y-axis labels for the second plot\n\n# Combine both plots side by side\ngrid.arrange(plot_murder, plot_assault, ncol = 2,\n             top = \"Murder and Assult Rates by State (per 100,000 residents) \n             (Source: R dataset: Violent Crime Rates by US State (USArrest))\")"
  },
  {
    "objectID": "assignment4.html#part-4",
    "href": "assignment4.html#part-4",
    "title": "Assignment 4: hackaton",
    "section": "Part 4",
    "text": "Part 4\n\nlibrary(ggplot2)\nlibrary(scales)\n#install.packages(\"gridExtra\")\nlibrary(gridExtra)\nlibrary(grid) \nlibrary(foreign)\n\nzam_r6_data_eng &lt;- read.spss(\"zam6.sav\", to.data.frame=TRUE)\n\nWarning in read.spss(\"zam6.sav\", to.data.frame = TRUE): zam6.sav: Unrecognized\nrecord type 7, subtype 8 encountered in system file\n\n\nWarning in read.spss(\"zam6.sav\", to.data.frame = TRUE): zam6.sav: Very long\nstring record(s) found (record type 7, subtype 14), each will be imported in\nconsecutive separate variables\n\n\nWarning in read.spss(\"zam6.sav\", to.data.frame = TRUE): Undeclared level(s) -1\nadded in variable: CALLS\n\n\nWarning in read.spss(\"zam6.sav\", to.data.frame = TRUE): Undeclared level(s)\n25560, 26760, 27120, 27180, 27300, 27420, 27720, 27900, 28020, 28200, 28380,\n28440, 28500, 28560, 28620, 28680, 28740, 28800, 28860, 28920, 28980, 29040,\n29160, 29220, 29400, 29520, 29700, 29760, 29820, 29880, 29940, 30000, 30060,\n30180, 30300, 30420, 30480, 30540, 30600, 30660, 30720, 30780, 30840, 30900,\n31140, 31200, 31380, 31440, 31500, 31560, 31620, 31680, 31800, 31860, 31980,\n32100, 32220, 32400, 32520, 32580, 32700, 32880, 33000, 33060, 33120, 33180,\n33240, 33300, 33360, 33420, 33480, 33600, 33660, 33720, 33780, 33840, 33900,\n33960, 34020, 34080, 34140, 34200, 34260, 34320, 34440, 34500, 34560, 34680,\n34740, 34800, 34860, 34920, 34980, 35040, 35100, 35160, 35220, 35280, 35340,\n35400, 35460, 35520, 35580, 35640, 35700, 35820, 35880, 36000, 36060, 36180,\n36300, 36360, 36420, 36480, 36600, 36660, 36720, 36840, 36900, 36960, 37020,\n37080, 37140, 37200, 37320, 37380, 37440, 37500, 37560, 37620, 37680, 37740,\n37800, 37860, 37920, 37980, 38040, 38100, 38160, 38280, 38340, 38400, 38520,\n38580, 38640, 38700, 38760, 38820, 38880, 38940, 39000, 39060, 39120, 39180,\n39240, 39300, 39420, 39480, 39600, 39660, 39720, 39840, 39900, 39960, 40020,\n40080, 40140, 40200, 40260, 40320, 40500, 40560, 40620, 40680, 40800, 40860,\n40920, 41040, 41100, 41160, 41220, 41280, 41400, 41520, 41580, 41700, 41760,\n41820, 41880, 42000, 42120, 42240, 42300, 42360, 42420, 42480, 42540, 42600,\n42660, 42720, 42780, 42840, 42900, 42960, 43020, 43080, 43140, 43200, 43260,\n43320, 43380, 43440, 43500, 43560, 43620, 43680, 43740, 43800, 43860, 43980,\n44040, 44100, 44280, 44340, 44400, 44460, 44520, 44580, 44700, 44760, 44820,\n44880, 45000, 45060, 45360, 45480, 45540, 45600, 45660, 45720, 45960, 46020,\n46200, 46260, 46320, 46380, 46440, 46500, 46560, 46680, 46740, 46800, 46860,\n46920, 46980, 47040, 47100, 47160, 47220, 47280, 47400, 47520, 47580, 47640,\n47700, 47760, 47880, 47940, 48000, 48060, 48120, 48180, 48240, 48300, 48360,\n48480, 48600, 48720, 48780, 48840, 48900, 48960, 49080, 49140, 49200, 49260,\n49380, 49440, 49500, 49560, 49680, 49740, 49800, 49920, 49980, 50100, 50160,\n50220, 50280, 50340, 50400, 50460, 50520, 50580, 50640, 50700, 50760, 50880,\n50940, 51000, 51060, 51120, 51180, 51240, 51300, 51420, 51480, 51540, 51600,\n51660, 51720, 51900, 52020, 52140, 52200, 52320, 52440, 52500, 52620, 52680,\n52800, 52860, 52920, 52980, 53040, 53100, 53160, 53220, 53280, 53340, 53400,\n53460, 53520, 53580, 53640, 53700, 53760, 53820, 53880, 53940, 54000, 54060,\n54180, 54300, 54360, 54420, 54480, 54540, 54600, 54660, 54720, 54780, 54840,\n54900, 54960, 55020, 55080, 55140, 55200, 55260, 55320, 55440, 55500, 55620,\n55680, 55800, 55860, 55920, 55980, 56040, 56100, 56220, 56280, 56340, 56400,\n56520, 56640, 56700, 56820, 56880, 56940, 57000, 57060, 57120, 57180, 57240,\n57300, 57360, 57480, 57540, 57600, 57720, 57780, 57900, 57960, 58020, 58080,\n58200, 58260, 58320, 58380, 58440, 58500, 58560, 58620, 58680, 58740, 58800,\n58860, 59100, 59160, 59220, 59280, 59340, 59400, 59460, 59520, 59580, 59700,\n59760, 59820, 59880, 60000, 60060, 60120, 60180, 60240, 60300, 60360, 60480,\n60600, 60780, 60840, 60960, 61020, 61080, 61200, 61260, 61320, 61380, 61440,\n61500, 61680, 61800, 61920, 62100, 62340, 62400, 62640, 62700, 62820, 63000,\n63120, 63180, 63300, 63420, 63600, 63660, 64080, 64200, 64380, 64500, 64680,\n64740, 64800, 64920, 64980, 65040, 65220, 65340, 65400, 65460, 65640, 65700,\n66180, 66300, 67260, 67440, 67620 added in variable: STRTIME\n\n\nWarning in read.spss(\"zam6.sav\", to.data.frame = TRUE): Undeclared level(s) 18,\n19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,\n59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79,\n80, 82, 84, 88, 92 added in variable: Q1\n\n\nWarning in read.spss(\"zam6.sav\", to.data.frame = TRUE): Undeclared level(s)\n29700, 30300, 30660, 30720, 31080, 31440, 31500, 31620, 31680, 31740, 31860,\n31920, 32040, 32100, 32220, 32340, 32520, 32580, 32700, 32820, 32880, 32940,\n33000, 33060, 33120, 33180, 33300, 33480, 33540, 33600, 33660, 33720, 33900,\n34080, 34140, 34200, 34260, 34320, 34380, 34440, 34500, 34560, 34620, 34680,\n34800, 34980, 35040, 35100, 35160, 35220, 35340, 35400, 35460, 35520, 35580,\n35640, 35700, 35880, 36000, 36060, 36120, 36300, 36360, 36420, 36480, 36540,\n36600, 36780, 36840, 36900, 36960, 37140, 37200, 37260, 37320, 37380, 37500,\n37620, 37680, 37800, 37860, 37920, 37980, 38040, 38100, 38160, 38220, 38340,\n38400, 38460, 38520, 38580, 38640, 38700, 38760, 38820, 38880, 38940, 39000,\n39060, 39120, 39180, 39240, 39300, 39360, 39420, 39480, 39540, 39600, 39660,\n39720, 39780, 39840, 39900, 40080, 40140, 40200, 40260, 40320, 40380, 40440,\n40500, 40560, 40740, 40800, 40860, 40980, 41040, 41100, 41160, 41220, 41400,\n41460, 41520, 41580, 41640, 41700, 41760, 41880, 42000, 42060, 42120, 42180,\n42240, 42300, 42420, 42480, 42540, 42600, 42720, 42840, 42900, 42960, 43080,\n43140, 43200, 43260, 43320, 43380, 43440, 43500, 43560, 43620, 43680, 43740,\n43800, 43860, 43920, 43980, 44100, 44160, 44340, 44400, 44460, 44520, 44580,\n44640, 44700, 44820, 44880, 45000, 45060, 45180, 45240, 45300, 45360, 45420,\n45480, 45540, 45600, 45660, 45780, 45840, 45900, 46080, 46140, 46200, 46260,\n46320, 46440, 46500, 46560, 46620, 46740, 46800, 46860, 46920, 46980, 47040,\n47100, 47160, 47280, 47340, 47400, 47460, 47520, 47580, 47640, 47700, 47760,\n47820, 47940, 48000, 48060, 48120, 48300, 48360, 48480, 48540, 48600, 48720,\n48900, 48960, 49080, 49200, 49260, 49320, 49380, 49440, 49500, 49620, 49680,\n49740, 49800, 49860, 49920, 49980, 50040, 50100, 50220, 50280, 50340, 50400,\n50520, 50580, 50700, 50760, 50820, 51000, 51060, 51120, 51180, 51240, 51300,\n51360, 51420, 51480, 51540, 51600, 51660, 51720, 51780, 51900, 52020, 52080,\n52140, 52200, 52260, 52320, 52440, 52500, 52560, 52620, 52680, 52800, 52920,\n52980, 53040, 53100, 53160, 53220, 53340, 53400, 53520, 53580, 53640, 53700,\n53760, 53820, 53880, 54000, 54060, 54120, 54180, 54300, 54360, 54420, 54480,\n54600, 54900, 54960, 55080, 55140, 55200, 55320, 55380, 55680, 55740, 55800,\n55920, 56040, 56220, 56280, 56400, 56460, 56640, 56700, 56760, 56820, 56880,\n56940, 57000, 57060, 57120, 57240, 57300, 57360, 57420, 57480, 57540, 57600,\n57660, 57720, 57780, 57840, 57900, 57960, 58020, 58140, 58200, 58260, 58320,\n58380, 58440, 58500, 58620, 58680, 58740, 58800, 58860, 58920, 58980, 59040,\n59100, 59280, 59400, 59460, 59520, 59580, 59640, 59760, 59820, 59880, 59940,\n60000, 60060, 60180, 60240, 60300, 60360, 60420, 60480, 60540, 60600, 60720,\n60780, 60840, 60900, 61140, 61200, 61260, 61320, 61380, 61440, 61500, 61560,\n61620, 61740, 61800, 61860, 61920, 62040, 62100, 62160, 62220, 62280, 62400,\n62460, 62640, 62700, 62880, 63000, 63120, 63180, 63240, 63300, 63360, 63420,\n63480, 63540, 63600, 63660, 63720, 63780, 63900, 63960, 64020, 64140, 64200,\n64260, 64320, 64440, 64500, 64560, 64620, 64680, 64740, 64800, 64920, 64980,\n65040, 65100, 65220, 65280, 65400, 65460, 65700, 65820, 66000, 66120, 66300,\n66480, 66540, 66780, 67020, 67380, 67560, 67620, 67680, 67740, 67800, 67860,\n67920, 68100, 68280, 68340, 68640, 68700, 69000, 69060, 69120, 69600, 70200,\n70380, 71100 added in variable: ENDTIME\n\n\nWarning in read.spss(\"zam6.sav\", to.data.frame = TRUE): Undeclared level(s) 30,\n31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,\n51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,\n71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90,\n91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108,\n109, 110, 112, 113, 115, 116, 117, 118, 122, 125, 126, 127, 128, 129, 130, 131,\n133, 134, 135, 136, 149, 150, 152 added in variable: LENGTH\n\n\nWarning in read.spss(\"zam6.sav\", to.data.frame = TRUE): Undeclared level(s) 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 39, 41, 56 added in\nvariable: Q113\n\nZAM_R9_data_final_wtd_release_14Feb23 &lt;- read.spss(\"zam9.sav\", to.data.frame=TRUE)\n\nWarning in read.spss(\"zam9.sav\", to.data.frame = TRUE): zam9.sav: Very long\nstring record(s) found (record type 7, subtype 14), each will be imported in\nconsecutive separate variables\n\n\nWarning in read.spss(\"zam9.sav\", to.data.frame = TRUE): Undeclared level(s) 18,\n19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,\n59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,\n80, 87, 89, 90 added in variable: Q1\n\n\nWarning in read.spss(\"zam9.sav\", to.data.frame = TRUE): Duplicated levels in\nfactor Q95: Apostolic Church, Salvation Army\n\nafrobarometer_release_dataset_zam_r8_en_2023_03_01 &lt;- read.spss(\"afro.sav\", to.data.frame=TRUE)\n\nWarning in read.spss(\"afro.sav\", to.data.frame = TRUE): Undeclared level(s)\n16757.15, 25083.453, 25622.191, 25730.967, 25750.132, 25856.37, 26175.318,\n26240.744, 26472.376, 26619.197, 27075.649, 27284.97, 27365.689, 27570.115,\n28282.571, 28283.109, 28294.507, 28340.981, 28433.681, 28555.548, 28651.247,\n28700.033, 28709.147, 28793.203, 28882.448, 28947.216, 29439.272, 29459.445,\n29680.041, 29762.087, 30049.56, 30084.519, 30156.2, 30164.055, 30222.684,\n30245.008, 30292.342, 30355.163, 30382.752, 30401.848, 30436.124, 30503.934,\n30657.918, 30765.579, 30814.293, 30877.026, 30901.127, 30943.245, 30997.203,\n30998.573, 31035.826, 31081.489, 31202.926, 31361.176, 31429.68, 31444.108,\n31529.669, 31534.587, 31548.973, 31603.106, 31630.889, 31646.377, 31652.123,\n31712.697, 31757.584, 31770.515, 31779.349, 31860.499, 31885.793, 31900.493,\n31923.034, 32027.118, 32067.947, 32077.272, 32226.623, 32314.292, 32343.343,\n32369.051, 32452.503, 32457.28, 32465.52, 32514.754, 32523.909, 32567.288,\n32590.64, 32712.088, 32718.312, 32749, 32840.267, 32863.941, 32895.149,\n32945.271, 32956.469, 33040.235, 33062.597, 33121.606, 33128.964, 33142.255,\n33226.977, 33230.116, 33230.892, 33238.296, 33257.061, 33377.156, 33386.446,\n33454.439, 33478.788, 33481.528, 33492.385, 33538.667, 33544.424, 33545.62,\n33549.871, 33556.115, 33570.958, 33612.721, 33691.353, 33694.52, 33700.577,\n33713.048, 33716.541, 33806.126, 33851.713, 33866.543, 33889.472, 33945.636,\n33972.228, 33986.557, 33989.681, 34018.374, 34026.402, 34055.055, 34059.262,\n34075.808, 34079.932, 34087.208, 34093.673, 34098.531, 34117.221, 34124.013,\n34138.723, 34194.919, 34198.79, 34199.794, 34203.6, 34249.181, 34259.445,\n34264.22, 34281.732, 34298.357, 34315.121, 34356.803, 34360.331, 34386.405,\n34415.78, 34421.268, 34433.31, 34433.775, 34476.34, 34481.464, 34535.31,\n34535.783, 34559.809, 34563.249, 34574.929, 34601.185, 34638.264, 34650.774,\n34661.448, 34684.292, 34711.849, 34730.805, 34740.723, 34754.63, 34770.005,\n34777.526, 34796.577, 34847.751, 34878.406, 34892.891, 34918.324, 34959.56,\n34962.065, 34977.274, 35058.853, 35064.272, 35069.328, 35070.107, 35077.833,\n35078.831, 35080.966, 35089.075, 35089.751, 35123.378, 35141.622, 35144.279,\n35144.694, 35157.251, 35160.708, 35164.01, 35175.62, 35199.551, 35221.155,\n35233.056, 35245.341, 35247.036, 35248.295, 35262.329, 35338.57, 35416.758,\n35422.662, 35427.675, 35432.82, 35450.591, 35458.054, 35515.397, 35534.434,\n35606.705, 35655.737, 35673.579, 35679.136, 35701.74, 35722.961, 35724.331,\n35778.324, 35792.86, 35830.699, 35832.527, 35852.56, 35862.756, 35889.732,\n35891.515, 35893.316, 35915.387, 35933.166, 36010.847, 36016.135, 36024.599,\n36039.751, 36069.318, 36099.264, 36110.54, 36112.563, 36130.506, 36134.766,\n36180.448, 36217.653, 36254.289, 36256.772, 36262.597, 36265.201, 36265.44,\n36270.326, 36323.702, 36366.119, 36368.655, 36379.85, 36387.424, 36452.131,\n36473.745, 36487.312, 36547.752, 36551.628, 36597.552, 36649.661, 36657.407,\n36657.408, 36691.859, 36695.131, 36697.254, 36724.743, 36764.154, 36778.007,\n36790.822, 36803.655, 36883.884, 36903.059, 36915.02, 36930.13, 36950.759,\n36951.746, 36972.095, 37021.156, 37024.141, 37027.832, 37059.868, 37074.409,\n37086.394, 37127.808, 37142.329, 37149.502, 37161.479, 37218.694, 37268.528,\n37285.582, 37286.982, 37438.81, 37442.563, 37452.423, 37475.627, 37484.521,\n37484.95, 37576.632, 37603.808, 37626.253, 37644.464, 37700.045, 37789.029,\n37800.624, 37829.809, 37860.036, 37864.6, 37878.512, 37905.502, 37940.266,\n37953.144, 37987.989, 38003.033, 38046.329, 38060.383, 38062.667, 38115.087,\n38194.322, 38218.41, 38220.062, 38249.156, 38269.676, 38316.931, 38344.24,\n38345.606, 38381.236, 38384.761, 38396.012, 38416.325, 38471.724, 38483.879,\n38566.568, 38591.182, 38593.59, 38594.08, 38603.754, 38636.811, 38654.829,\n38659.839, 38694.305, 38695.43, 38716.346, 38777.749, 38834.947, 38842.432,\n38887.417, 38980.665, 39094.759, 39101.517, 39154.543, 39224.658, 39229.486,\n39234.724, 39357.175, 39396.637, 39413.151, 39418.405, 39503.914, 39503.949,\n39529.483, 39530.143, 39535.258, 39567.459, 39625.48, 39636.106, 39644.12,\n39677.105, 39680.74, 39718.069, 39769.631, 39785.114, 39801.254, 39803.535,\n39813.914, 39820.606, 39822.989, 39864.656, 39868.835, 39947.738, 39978.651,\n39995.426, 39995.618, 39999.207, 40010.113, 40017.684, 40036.911, 40041.834,\n40051.412, 40074.758, 40086.911, 40145.735, 40173.432, 40174.941, 40204.75,\n40220.246, 40231.071, 40248.324, 40249.814, 40250.419, 40287.734, 40337.465,\n40369.659, 40389.037, 40390.025, 40435.897, 40437.033, 40448.263, 40451.091,\n40459.467, 40513.473, 40539.791, 40555.802, 40571.244, 40676.213, 40689.286,\n40750.203, 40787.467, 40787.729, 40800.115, 40858.587, 40865.651, 40865.714,\n40870.363, 40958.029, 40996.669, 41034.194, 41042.407, 41047.897, 41074.01,\n41077.432, 41092.238, 41123.496, 41125.663, 41130.372, 41133.556, 41152.736,\n41205.11, 41216.842, 41325.051, 41351.531, 41355.514, 41395.332, 41400.181,\n41413.496, 41445.798, 41448.021, 41453.661, 41458.494, 41476.192, 41490.625,\n41540.708, 41567.552, 41576.966, 41606.252, 41637.727, 41640.439, 41683.201,\n41731.919, 41733.799, 41749.502, 41770.735, 41772.786, 41797.212, 41821.217,\n41840.774, 41854.017, 41863.278, 41874.849, 41880.105, 41891.331, 41896.006,\n41907.402, 41949.202, 41951.49, 41967.212, 42119.498, 42120.382, 42125.82,\n42129.573, 42159.256, 42184.983, 42187.143, 42190.846, 42233.49, 42243.951,\n42248.078, 42287.834, 42296.522, 42304.465, 42307.118, 42318.915, 42326.814,\n42328.171, 42330.904, 42348.356, 42368.961, 42377.205, 42394.127, 42399.641,\n42412.106, 42416.892, 42462.463, 42562.47, 42589.08, 42666.035, 42704.308,\n42754.51, 42758.464, 42767.13, 42791.216, 42812.826, 42817.992, 42834.414,\n42838.137, 42876, 42898.164, 42917.628, 42929.172, 42945.998, 42948.515,\n42986.868, 43006.507, 43036.83, 43044.881, 43048.192, 43065.906, 43103.008,\n43170.696, 43185.648, 43252.448, 43278.063, 43278.794, 43309.107, 43312.32,\n43344.619, 43347.815, 43356.386, 43371.092, 43377.354, 43417.932, 43428.256,\n43429.388, 43497.075, 43497.874, 43507.656, 43572.073, 43582.646, 43587.798,\n43622.273, 43671.739, 43761.269, 43827.348, 43862.943, 43899.752, 43903.537,\n43918.299, 43973.523, 43990.343, 44022.151, 44040.638, 44051.32, 44077.761,\n44084.073, 44087.348, 44095.443, 44194.542, 44194.887, 44200.452, 44241.041,\n44245.028, 44311.77, 44364.136, 44396.069, 44401.857, 44413.306, 44469.559,\n44506.679, 44531.128, 44577.963, 44593.38, 44604.577, 44614.146, 44624.912,\n44657.439, 44704.067, 44719.113, 44724.336, 44749.096, 44895.413, 44897.765,\n45043.175, 45066.782, 45070.47, 45106.311, 45144.647, 45154.664, 45230.199,\n45254.661, 45350.41, 45452.595, 45456.175, 45518.868, 45549.281, 45584.684,\n45596.111, 45600.969, 45715.511, 45737.808, 45768.887, 45824.52, 45866.029,\n45875.472, 45885.962, 45896.818, 45911.58, 45924.251, 46043.04, 46045.019,\n46090.801, 46170.078, 46215.68, 46273.543, 46292.914, 46304.063, 46373.337,\n46391.394, 46442.266, 46468.899, 46501.274, 46525.974, 46537.114, 46572.321,\n46587.172, 46589.1, 46607.707, 46628.368, 46657.826, 46706.715, 46716.529,\n46721.215, 46742.293, 46750.761, 46763.129, 46769.741, 46849.8, 46864.924,\n46881.888, 46970.794, 47016.383, 47052.407, 47077.452, 47088.283, 47094.782,\n47107.241, 47175.972, 47188.171, 47202.368, 47261.759, 47289.257, 47306.917,\n47314.219, 47319.584, 47321.099, 47326.855, 47339.031, 47343.497, 47366.561,\n47375.187, 47434.515, 47439.751, 47450.422, 47507.349, 47524.21, 47548.9,\n47572.293, 47626.152, 47633.126, 47650.799, 47718.58, 47743.348, 47785.235,\n47785.996, 47814.282, 47827.022, 47832.011, 47844.401, 47916.437, 47952.773,\n47986.399, 48045.332, 48099.805, 48116.348, 48166.944, 48174.176, 48188.733,\n48225.916, 48228.643, 48232.984, 48240.501, 48278.494, 48289.152, 48317.57,\n48380.914, 48436.921, 48443.184, 48447.294, 48451.746, 48452.768, 48464.147,\n48468.252, 48478.909, 48480.482, 48484.827, 48503.681, 48579.657, 48633.353,\n48640.453, 48654.858, 48782.149, 48791.019, 48804.263, 48806.309, 48823.242,\n48846.081, 48847.97, 48852.705, 48858.024, 48862.665, 48884.228, 48939.365,\n48948.525, 48985.489, 48998.039, 49002.122, 49008.358, 49036.369, 49122.822,\n49133.652, 49153.365, 49165.518, 49205.372, 49215.704, 49235.393, 49242.834,\n49263.619, 49277\n\n\nWarning in read.spss(\"afro.sav\", to.data.frame = TRUE): Undeclared level(s) 18,\n19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,\n59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,\n79, 80, 81, 82, 96 added in variable: Q1\n\n\nWarning in read.spss(\"afro.sav\", to.data.frame = TRUE): Undeclared level(s) 18,\n19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39,\n40, 42, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 60, 65, 69, 70 added in\nvariable: Q35B\n\n\nWarning in read.spss(\"afro.sav\", to.data.frame = TRUE): Undeclared level(s) 30,\n35, 37, 40, 45, 48, 49, 50, 53, 54, 55, 56, 59, 60, 61, 62, 65, 67, 68, 69, 70,\n72, 75, 76, 78, 79, 80, 85, 90, 95, 100 added in variable: Q35D\n\n\nWarning in read.spss(\"afro.sav\", to.data.frame = TRUE): Duplicated levels in\nfactor Q69A: Rwanda\n\n\nWarning in read.spss(\"afro.sav\", to.data.frame = TRUE): Duplicated levels in\nfactor COV11: Not applicable\n\n\nWarning in read.spss(\"afro.sav\", to.data.frame = TRUE): Duplicated levels in\nfactor COV12: Not applicable\n\n\nWarning in read.spss(\"afro.sav\", to.data.frame = TRUE): Duplicated levels in\nfactor Q95C: Retired\n\n\nWarning in read.spss(\"afro.sav\", to.data.frame = TRUE): Undeclared level(s) 42,\n43, 52.1425166666667, 53.2772166666667, 54.4401, 55.5064666666666,\n55.6305166666667, 55.9714666666667, 56.2719, 56.7542, 56.7820833333334,\n57.06695, 57.6095500000001, 58.6226166666666, 58.8652166666667,\n59.4884500000001, 59.5761166666666, 59.8130666666667, 59.8804166666666,\n60.1418500000001, 60.59565, 61.6991166666667, 61.8254, 62.0981333333334,\n62.4815833333333, 62.5802833333333, 62.6231833333333, 63.5432833333334,\n63.74495, 63.8128666666667, 63.8791833333333, 63.9436666666667,\n64.2089666666667, 64.4439999999999, 64.5353833333334, 64.8131333333333,\n64.9298333333333, 65.0678833333334, 65.6711000000001, 65.6938833333334,\n65.86445, 65.8657833333333, 66.00095, 66.0158333333333, 66.19955,\n66.2276833333333, 66.3570666666667, 66.4318000000001, 66.6205166666667,\n66.7763833333334, 66.8272833333333, 66.8652000000001, 66.8979666666666,\n66.9040833333334, 66.9877666666667, 67.0565333333333, 67.27885,\n67.3444666666666, 67.3548666666667, 67.3656666666666, 67.38435, 67.4962,\n67.5471666666666, 67.7263166666666, 67.7808666666667, 67.8064166666667,\n67.89535, 67.9322666666666, 67.9765833333334, 68.1275833333333,\n68.2204166666666, 68.2265500000001, 68.2998666666666, 68.4676833333334,\n68.5731833333333, 68.7748833333334, 68.93465, 69.0929166666666,\n69.1651666666667, 69.5280833333333, 69.5422499999999, 69.5558166666666,\n69.8319166666667, 69.8911333333333, 69.8977333333334, 69.9552666666666,\n69.96045, 70.1025666666666, 70.1779499999999, 70.22275, 70.3173500000001,\n70.3454833333332, 70.4088166666667, 70.4411, 70.50495, 70.5208833333333,\n70.5614166666666, 70.5797333333333, 70.65765, 70.7714666666667,\n70.7814833333333, 70.8486166666667, 70.8842833333333, 70.95075,\n71.0368166666666, 71.0740333333334, 71.1255666666667, 71.1798,\n71.2028499999999, 71.2702333333333, 71.3257, 71.3649666666667,\n71.4321333333333, 71.4690833333334, 71.5220333333333, 71.5348166666667,\n71.5792499999998, 71.5825166666667, 71.7118666666667, 71.7630333333333,\n71.7925333333334, 71.8430833333333, 71.854, 71.8580166666667, 71.9481833333334,\n71.9725833333333, 71.9737499999999, 72.0109833333333, 72.0783833333332,\n72.1505166666667, 72.40325, 72.43425, 72.49995, 72.5531333333334,\n72.5982500000001, 72.6505333333333, 72.7078833333333, 72.9026166666667,\n72.9283666666667, 72.9311333333334, 72.9684166666667, 73, 73.0063166666667,\n73.0708, 73.20205, 73.2237166666667, 73.3373833333334, 73.3623000000001,\n73.5623666666666, 73.6093333333333, 73.6656333333334, 73.6680166666666,\n73.7347833333333, 73.7726333333333, 73.8379, 74, 74.0685166666667,\n74.0787666666667, 74.0927499999999, 74.1157833333333, 74.1632333333332,\n74.1756, 74.2266666666666, 74.2781333333334, 74.3255833333333,\n74.4814333333333, 74.5238000000001, 74.6006166666666, 74.7101500000001,\n74.7413166666667, 74.7869833333333, 74.8214500000001, 74.8965833333334,\n74.9923999999999, 75.0075166666667, 75.1243, 75.14535, 75.1586333333333,\n75.2075166666667, 75.2118333333334, 75.2494666666667, 75.2773333333334,\n75.3397000000001, 75.4369166666667, 75.5222, 75.5293999999999,\n75.5352666666666, 75.6049333333332, 75.6089333333333, 75.6405666666667,\n75.6519666666666, 75.8413666666666, 75.8662666666666, 75.9715333333332,\n76.0402333333333, 76.1939166666667, 76.2008333333334, 76.2906166666668,\n76.4205833333333, 76.4244166666666, 76.4382333333332, 76.4831666666667,\n76.5373666666668, 76.5586666666666, 76.6026666666667, 76.6079999999999,\n76.6676499999999, 76.6955833333333, 76.72155, 76.7311166666666,\n76.8357833333333, 76.9045833333334, 76.9726333333333, 77.0117833333334,\n77.0903, 77.1028333333334, 77.1486499999999, 77.1595, 77.1808666666667,\n77.23305, 77.2467166666667, 77.2682166666667, 77.2895833333333, 77.4192,\n77.4426500000001, 77.5358999999999, 77.5902166666668, 77.6728666666666,\n77.9274, 77.9376, 78.0521666666667, 78.0527166666666, 78.05585, 78.095,\n78.1285666666665, 78.18055, 78.2043166666666, 78.2949166666667,\n78.3097666666667, 78.3706333333333, 78.4328666666667, 78.4528833333332,\n78.4977333333332, 78.5072333333333, 78.6362499999999, 78.8488166666666,\n78.9731333333333, 79.1640333333334, 79.1794666666667, 79.23705, 79.25495,\n79.2787500000001, 79.291, 79.2932333333333, 79.297, 79.3101833333333, 79.3215,\n79.3438833333332, 79.3805666666667, 79.3907833333333, 79.4483833333333,\n79.4685833333333, 79.4698666666667, 79.5066166666666, 79.63725,\n79.6603666666667, 79.66395, 79.7233, 79.8761833333334, 79.9316166666666,\n79.9975666666667, 80.0106166666667, 80.0924333333334, 80.1350333333333,\n80.1562666666666, 80.1571666666667, 80.2049666666666, 80.2183833333333,\n80.2187333333333, 80.3341666666667, 80.4180166666666, 80.4604333333333,\n80.4948833333333, 80.5237833333334, 80.5354000000001, 80.5474,\n80.5588666666667, 80.5685, 80.5926833333334, 80.6012333333332, 80.6607,\n80.6714, 80.7978666666667, 80.7988333333332, 80.8532999999999, 80.88725,\n80.9189333333333, 80.9275333333334, 80.9804666666667, 81.0849666666666,\n81.4132333333334, 81.467, 81.4812333333333, 81.5374, 81.6241166666667,\n81.6286333333333, 81.6966, 81.7275833333333, 81.7400500000001,\n81.7604833333333, 81.80485, 81.8300000000001, 81.8851666666667, 81.948,\n81.9637666666667, 82.062, 82.1368166666666, 82.1704833333335, 82.1801333333334,\n82.2376166666666, 82.2972666666666, 82.3266833333334, 82.3267333333333,\n82.5009000000001, 82.52795, 82.6049833333333, 82.6887666666667,\n82.7107333333333, 82.7125666666667, 82.7438, 82.7842666666666,\n82.7964666666667, 82.8178666666667, 82.8637666666667, 82.91655,\n82.9298666666667, 82.9414166666667, 82.96595, 83.0220166666666,\n83.0247666666666, 83.0348166666667, 83.0619666666667, 83.0885666666666,\n83.1547166666667, 83.32045, 83.3790833333334, 83.4156833333333,\n83.4493333333333, 83.4676, 83.5392500000001, 83.57345, 83.5808666666667,\n83.5964333333332, 83.6037, 83.6924000000001, 83.7013666666667,\n83.7611000000001, 83.9909333333334, 84.0251833333333, 84.0508166666666,\n84.0650833333333, 84.1568333333333, 84.3748, 84.3748666666666,\n84.3761333333333, 84.3908333333333, 84.4155666666667, 84.4358666666667,\n84.4442333333332, 84.4657166666667, 84.4957, 84.5792333333333,\n84.5917333333334, 84.7167000000001, 84.7466333333334, 84.7858666666667,\n84.9045833333332, 85, 85.0617666666666, 85.0931666666667, 85.09805,\n85.1283000000001, 85.1378666666666, 85.1453166666666, 85.1794666666666,\n85.2265666666667, 85.3742833333334, 85.4496666666667, 85.4763833333333,\n85.6110666666666, 85.6713166666667, 85.7799500000001, 85.8578333333332,\n85.8763166666668, 85.9032833333333, 85.9147333333333, 85.9725666666668,\n86.1587333333334, 86.27075, 86.4894166666668, 86.5503166666667,\n86.6051666666666, 86.6544666666666, 86.66405, 86.7246166666666,\n86.7287500000001, 86.7743666666667, 86.8245333333334, 86.8268500000001,\n86.8858, 86.9177333333334, 86.9953833333333, 87.0707166666667,\n87.0916833333334, 87.1207000000001, 87.2237000000001, 87.3211166666667,\n87.3403499999999, 87.4484666666667, 87.4576833333333, 87.46565,\n87.5144166666666, 87.5398, 87.7719499999999, 87.7829333333334,\n87.8670000000001, 87.8991166666667, 87.9793, 87.9859333333333,\n87.9984999999999, 88.02845, 88.1736666666666, 88.1817333333333,\n88.1921333333333, 88.1990833333333, 88.2102333333333, 88.2958999999999,\n88.37645, 88.4107500000001, 88.48225, 88.5157333333333, 88.5363166666667,\n88.5579666666667, 88.5903499999999, 88.5934333333333, 88.7095333333333,\n88.9433666666666, 88.96655, 89.0178499999999, 89.0455833333333,\n89.1256333333333, 89.1673, 89.2153000000001, 89.2290166666666, 89.27035,\n89.3666166666666, 89.3704999999999, 89.4545166666665, 89.4782666666666,\n89.5034, 89.6817666666667, 89.7920833333334, 89.8000166666667, 89.8721,\n89.9576499999999, 90.0196166666666, 90.2279999999999, 90.2342833333334,\n90.2574333333334, 90.3042833333333, 90.3237333333333, 90.4160499999999,\n90.4166166666666, 90.4212166666667, 90.4250166666666, 90.4986333333333,\n90.5027833333334, 90.5566666666667, 90.7693999999999, 90.77645, 90.78125,\n90.8184333333333, 90.84865, 90.8722500000001, 90.8917333333332,\n91.0234833333333, 91.0867333333333, 91.22065, 91.3228166666666, 91.32465,\n91.3482500000001, 91.35725, 91.4104499999999, 91.4753166666667,\n91.5105333333333, 91.5275833333334, 91.6280166666667, 91.6605666666666,\n91.7021333333333, 91.7062166666667, 91.7129666666666, 91.7171333333333, 91.7182\n\n## Round 6 ##\nzam_r6_data_eng$Q81B &lt;- as.factor(zam_r6_data_eng$Q81B)\n\nggplot1 &lt;- ggplot(data = zam_r6_data_eng) +\n  geom_bar(mapping = aes(x = Q81B, fill = Q81B, group = Q81B, \n                         y=(..count..)/sum(..count..)), col = \"black\") +\n  scale_y_continuous(labels=percent_format()) +\n  scale_fill_manual(values = c(\"black\", \"red\", \"orange\", \"yellow\", \"lightblue\", \n                               \"green\", \"pink\")) +\n  theme(legend.position = \"none\") +\n  scale_x_discrete(labels = c(\"Missing\", \"Very negative\", \"Somewhat negative\", \n                            \"Neither positive nor negative\", \"Somewhat positive\",\n                            \"Very positive\", \"Don't know\")) +\n  labs(\n    title = \"Round 6 2014/2015\",\n    x = \"Responses (n=1199)\",\n    y = \"Response percentage\"\n    ) +\n  theme(axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5)) +  # Center the title\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n## Round 8 ##\nafrobarometer_release_dataset_zam_r8_en_2023_03_01$Q70E &lt;- as.factor(afrobarometer_release_dataset_zam_r8_en_2023_03_01$Q70E)\n\nggplot2 &lt;- ggplot(data = afrobarometer_release_dataset_zam_r8_en_2023_03_01) +\n  geom_bar(mapping = aes(x = Q70E, fill = Q70E, group = Q70E, \n                         y=(..count..)/sum(..count..)), col = \"black\") +\n  scale_y_continuous(labels=percent_format()) +\n  scale_fill_manual(values = c(\"black\", \"red\", \"orange\", \"yellow\", \"lightblue\", \n                               \"green\", \"pink\")) +\n  theme(legend.position = \"none\") +\n  scale_x_discrete(labels = c(\"Missing\", \"Very negative\", \"Somewhat negative\", \n                              \"Neither positive nor negative\", \"Somewhat positive\",\n                              \"Very positive\", \"Don't know\")) +\n  labs(\n    title = \"Round 8 2019/2021\",\n    x = \"Responses (n=1200)\",\n    y = \"Response percentage\"\n  ) +\n  theme(axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5)) + # Center the title\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n## Round 9 ##\nZAM_R9_data_final_wtd_release_14Feb23$Q78A &lt;- as.factor(ZAM_R9_data_final_wtd_release_14Feb23$Q78A)\n\nggplot3 &lt;- ggplot(data = ZAM_R9_data_final_wtd_release_14Feb23) +\n  geom_bar(mapping = aes(x = Q78A, fill = Q78A, group = Q78A, \n                         y=(..count..)/sum(..count..)), col = \"black\") +\n  scale_y_continuous(labels=percent_format()) +\n  scale_fill_manual(values = c(\"black\", \"red\", \"orange\", \"yellow\", \"lightblue\", \n                               \"green\", \"pink\")) +\n  theme(legend.position = \"none\") +\n  scale_x_discrete(labels = c(\"Missing\", \"Very negative\", \"Somewhat negative\", \n                              \"Neither positive nor negative\", \"Somewhat positive\",\n                              \"Very positive\", \"Don't know\")) +\n  labs(\n    title = \"Round 9 2021/2023\",\n    x = \"Responses (n=1200)\",\n    y = \"Response percentage\"\n  ) +\n  theme(axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5)) + # Center the title\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ngrid.arrange(ggplot1, ggplot2, ggplot3, ncol = 3, \n             top = \"Figure 1: Zambia's public views toward China's influence\")\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\nsource_text &lt;- \"Source: Afrobarometer\"\ngrid.text(source_text, x = 0.5, y = 0.00001, just = \"bottom\", gp = gpar(fontsize = 10))"
  },
  {
    "objectID": "assignment4.html#summary",
    "href": "assignment4.html#summary",
    "title": "Assignment 4: hackaton",
    "section": "Summary",
    "text": "Summary\n\n\n\nChart 1\n\n\n\n\n\nChart 2\n\n\n\n\n\nChart 3\n\n\n\n\n\nChart 4"
  },
  {
    "objectID": "assignment5.html",
    "href": "assignment5.html",
    "title": "Assignment 5",
    "section": "",
    "text": "data &lt;- read.csv(\"data.csv\")\ndata_2021 &lt;- data[data$Year == 2021,]\n\n\n#I want to create a frequency histogram based on various thresholds\n#I start by adding the thresholds\nSturges &lt;- c(0, 0.06, 0.1, 0.14) \n\n#I code my frequency histogram\nhist(data_2021$Trade.Percent, \n     breaks = Sturges,\n     freq = TRUE,\n     main = \"Number of countries with which Italy has high trade shares (2021)\",\n     xlab = \"Trade Percent Categories\",\n     ylab = \"Frequency\",\n     col = \"Purple\")\n\nWarning in plot.histogram(r, freq = freq1, col = col, border = border, angle =\nangle, : the AREAS in the plot are wrong -- rather use 'freq = FALSE'\n\n\n\n\n\n\n#now I want to use ggplot\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nggplot(data_2021, aes(x = Trade.Percent)) +\n  geom_histogram(breaks = Sturges, fill = \"purple\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Number of countries with which Italy has high trade shares (2021)\",\n    x = \"Trade Percent Categories\",\n    y = \"Frequency\"\n  )\n\n\n\n\n\n#bar chart, vertical\n# Create the bar chart\nbarplot(data_2021$Trade.Percent, names.arg = data_2021$Country,\n        main = \"Trade Percent by Country for 2021\",\n        xlab = \"Country\", ylab = \"Trade Percent\", col = \"blue\",\n        las = 2, cex.names = 0.7)\n\n\n\n#ggplot version\nggplot(data_2021, aes(x = Country, y = Trade.Percent)) +\n  geom_bar(stat = \"identity\", fill = \"purple\") +\n  labs(\n    title = \"Trade Percent by Country for 2021\",\n    x = \"Country\",\n    y = \"Trade Percent\"\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\n\n\n#horizontal\nbarplot(data_2021$Trade.Percent, horiz = TRUE,\n        names.arg = data_2021$Country,\n        main = \"Trade Percent by Country for 2021\",\n        ylab = \"Country\", xlab = \"Trade Percent\", col = \"blue\",\n        las = 1, cex.names = 0.7)\n\n\n\n#ggplot\nggplot(data_2021, aes(x = Trade.Percent, y = Country)) +\n  geom_bar(stat = \"identity\", fill = \"purple\") +\n  labs(\n    title = \"Trade Percent by Country for 2021\",\n    x = \"Trade Percent\",\n    y = \"Country\"\n  ) +\n  theme(axis.text.y = element_text(angle = 0, hjust = 1))  \n\n\n\n\n\n#Piechart\n#Calculate the sum of Trade.Percent for the top 10 countries and get what's \n#left (\"Others\")\nsum_top_10 &lt;- sum(data_2021$Trade.Percent)\ntrade_percent_others &lt;- 1 - sum_top_10\n\n#Get new dataset with just the \"Country\" and \"Trade.Percent\" columns\ndata_pie &lt;- data.frame(Country = c(data_2021$Country, \"Others\"), \n                      Trade.Percent = c(data_2021$Trade.Percent, trade_percent_others))\n\n#plotting\npie(data_pie$Trade.Percent, labels = data_pie$Country, col = rainbow(length(data_pie$Country)))\n\n\n\n#ggplot\nprint &lt;- ggplot(data_pie, aes(x = \"\", y = Trade.Percent, fill = Country)) +\n  geom_bar(stat = \"identity\") +\n  coord_polar(theta = \"y\") +\n  labs(\n    title = \"Trade Percent by Country for 2021\",\n    fill = \"Country\"\n  )\nprint\n\n\n\n\n\n#I export the files\nggsave(\"pie_chart.pdf\", plot = print, device = \"pdf\", width = 6, height = 6)\nggsave(\"pie_chart.jpg\", plot = print, device = \"jpg\", width = 6, height = 6)"
  },
  {
    "objectID": "assignment6.html",
    "href": "assignment6.html",
    "title": "Assignment 6",
    "section": "",
    "text": "Example of Shiny with my own code/datasets\n\n\nExample of Assignment iframe with default datasets"
  },
  {
    "objectID": "assignment7.html",
    "href": "assignment7.html",
    "title": "Assignment 7",
    "section": "",
    "text": "https://garth36.shinyapps.io/hackaton2/"
  },
  {
    "objectID": "assignment7.html#assignment-7",
    "href": "assignment7.html#assignment-7",
    "title": "Assignment 7",
    "section": "",
    "text": "https://garth36.shinyapps.io/hackaton2/"
  }
]